name: Release package version
description: Release package version based on package.json

inputs:
  token:
    type: string

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    # Set up Node.js
    - uses: actions/setup-node@v4
      with:
        node-version: "20.x"

    # Check if package.json version has changed
    - name: Get current version
      id: get_version
      run: echo "::set-output name=version::$(node -p "require('./package.json').version")"
      shell: bash

      # Get current branch name
    - name: Get current branch name
      id: get_branch
      run: echo "::set-output name=branch::$(git rev-parse --abbrev-ref HEAD)"
      shell: bash

# Check if version is already released
    - name: Check if version is already released
      id: check_release
      run: |
        VERSION=${{ steps.get_version.outputs.version }}
        RELEASE_EXISTS=$(curl -H "Authorization: token ${{ inputs.token }}" -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/releases | \
          jq -r --arg VERSION "v$VERSION" '.[] | select(.tag_name == $VERSION) | .tag_name')
        if [ "$RELEASE_EXISTS" == "v$VERSION" ]; then
          echo "Version v$VERSION is already released."
          echo "::set-output name=released::true"
        else
          echo "Version v$VERSION is not released yet."
          echo "::set-output name=released::false"
        fi
      shell: bash

    - name: Stop if version has not changed
      if: steps.version_check.outputs.released == 'false'
      run: echo "Version has not changed, stopping job."
      shell: bash

    - name: Collect release info from main repo
      if: steps.version_check.outputs.released == 'true'
      run: |
        git clone https://github.com/revolist/revogrid.git main-repo
        RELEASE_NOTES=$(jq -r '.changelog' main-repo/package.json)
        echo "::set-output name=release_notes::$RELEASE_NOTES"
      shell: bash

    - name: Create GitHub release
      if: steps.version_check.outputs.released == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        draft: true
        prerelease: true
        body: |
          ## Changelog
          ${{ steps.release_notes.outputs.release_notes }}
          $(jq -r '.changelog' ./package.json)
