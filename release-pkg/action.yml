name: Release package version
description: Release package version based on package.json

inputs:
  token:
    type: string

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    # Set up Node.js
    - uses: actions/setup-node@v4
      with:
        node-version: "20.x"

    # Check if package.json version has changed
    - name: Get current version
      id: get_version
      run: echo "::set-output name=version::$(node -p "require('./package.json').version")"
      shell: bash

      # Get current branch name
    - name: Get current branch name
      id: get_branch
      run: echo "::set-output name=branch::$(git rev-parse --abbrev-ref HEAD)"
      shell: bash

    - name: Check if version tag changed
      id: version_check
      run: |
        VERSION=${{ steps.get_version.outputs.version }}
        git fetch --tags
        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "Tag v$VERSION changed."
          echo "::set-output name=changed::false"
        else
          echo "Tag v$VERSION does not exist."
          echo "::set-output name=changed::true"
        fi
      shell: bash

    - name: Stop if version has not changed
      if: steps.version_check.outputs.changed == 'false'
      run: echo "Version has not changed, stopping job."
      shell: bash

    - name: Install conventional releaser
      run: npm i -g conventional-github-releaser
      shell: bash
    
    - name: Release
      run: conventional-github-releaser -p angular -url=https://github.com/revolist/revogrid -r 0
      env:
        CONVENTIONAL_GITHUB_RELEASER_TOKEN: ${{ inputs.token }}
      shell: bash

    # - name: Collect release info from main repo
    #   if: steps.version_check.outputs.changed == 'true'
    #   run: |
    #     git clone https://github.com/revolist/revogrid.git main-repo
    #     RELEASE_NOTES=$(jq -r '.changelog' main-repo/package.json)
    #     echo "::set-output name=release_notes::$RELEASE_NOTES"
    #   shell: bash
      

    # - name: Create GitHub release
    #   if: steps.version_check.outputs.changed == 'true'
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ inputs.token }}
    #   with:
    #     tag_name: v${{ steps.get_version.outputs.version }}
    #     release_name: Release ${{ steps.get_version.outputs.version }}
    #     draft: true
    #     prerelease: true
    #     body: |
    #       ## Changelog
    #       ${{ steps.release_notes.outputs.release_notes }}
          
