name: Release revogrid version
description: Release revogrid version

inputs:
  token:
    type: string
    required: true
    description: "GitHub token"
  npm_token:
    type: string
    required: true
    description: "NPM token"

runs:
  using: "composite"
  steps:
    - name: Fetch all branches and tags
      run: git fetch --all
      shell: bash

    - uses: ./actions/branch-name
      id: get_branch

    - uses: ./actions/version-from-tag
      id: get_version
      with:
        tag: ${{ github.event.release.tag_name }}

    - uses: ./actions/configure-git
      
    - name: Checkout branch
      run: git checkout ${{ steps.get_branch.outputs.branch }}
      shell: bash

    - name: Update package.json version
      env:
        VERSION: ${{ steps.get_version.outputs.version }}
      run: |
        echo "Updating package.json with version $VERSION"
        jq --arg version "$VERSION" '.version = $version' package.json > tmp.$$.json && mv tmp.$$.json package.json
      shell: bash

    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        git add package.json
        git commit -m "chore(release): Update package.json for release ${{ github.event.release.tag_name }}"
        git push
      shell: bash

    - name: Setup Node to publish to npm Packages
      uses: actions/setup-node@v4
      with:
        node-version: "22.x"
        registry-url: "https://registry.npmjs.org"

    - run: npm ci
      shell: bash

    - run: npm run build
      shell: bash

    - uses: actions/attest-build-provenance@v1
      with:
        subject-path: './dist'
        github-token: ${{ inputs.token }}

    - name: Check if pre-release
      id: tag
      run: |
        if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
          echo "::set-output name=TAG::prerelease"
        else
          echo "::set-output name=TAG::latest"
        fi
      shell: bash

    - name: Publish to npm
      run: npm publish --access public --tag ${{ steps.tag.outputs.TAG }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm_token }}
      shell: bash

    - name: Setup GitHub Packages
      uses: actions/setup-node@v4
      with:
        registry-url: 'https://npm.pkg.github.com'
        # Defaults to the user or organization that owns the workflow file
        scope: '@revolist'

    - name: Publish to GitHub Packages
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ inputs.token }}
      shell: bash

    
